---
- name: Add disk space to EC2 instance
  hosts: localhost
  gather_facts: false
  tags: expand_disk

  vars:
    ansible_python_interpreter: /usr/bin/python3

  environment:
    AWS_REGION: "{{ _aws_region | default('us-east-1') }}"

  tasks:
    - name: Gather information about a particular instance using ID
      register: r_instance_info
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ _host }}"
          instance-state-name: ["running"]

    - name: Get volume info
      register: r_vol_info
      amazon.aws.ec2_vol_info:
        filters:
          volume-id: "{{ r_instance_info['instances'][0]['block_device_mappings'][0]['ebs']['volume_id'] }}"

    - name: Resize volume
      register: r_vol
      amazon.aws.ec2_vol:
        instance: "{{ r_instance_info['instances'][0]['instance_id'] }}"
        id: "{{ r_instance_info['instances'][0]['block_device_mappings'][0]['ebs']['volume_id'] }}"
        modify_volume: true
        volume_size: "{{ (r_vol_info['volumes'][0].size * 1.2) | round(0, 'ceil') | int }}"

    - name: Restart ec2
      amazon.aws.ec2_instance:
        instance_ids:
          - "{{ r_instance_info['instances'][0]['instance_id'] }}"
        state: restarted
        wait: true
        wait_timeout: 500

    - name: Get ec2 instance info after reboot
      register: r_post_reboot_info
      amazon.aws.ec2_instance_info:
        filters:
          tag:Name: "{{ _host }}"
          instance-state-name: ["running"]

    - name: Add host with updated IP
      ansible.builtin.add_host:
        name: ec2_post_reboot
        ansible_host: "{{ r_post_reboot_info['instances'][0]['public_ip_address'] }}"

- name: Expand the filesystem
  hosts: ec2_post_reboot
  gather_facts: false
  tags: expand_fs

  tasks:
    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:
        timeout: "{{ reboot_timeout | default(300) }}"

    - name: Gather facts
      ansible.builtin.setup:

    - name: Resize drive to max available size
      when: ansible_distribution | lower == 'windows'
      community.windows.win_partition:
        drive_letter: C
        partition_size: -1

    - name: debug filter_plugins.common.do_find_root_partitions
      ansible.builtin.debug:
        msg: "{{ ansible_devices | root_partitions }}"

    - name: Resize root partition
      when: ansible_system | lower == 'linux'
      loop: "{{ ansible_devices | root_partitions }}" # filter_plugins.common.do_find_root_partitions
      loop_control:
        loop_var: part
      community.general.parted:
        device: "/dev/{{ part.dev }}"
        number: "{{ part.num }}"
        part_end: "100%"
        resize: true
        state: present
